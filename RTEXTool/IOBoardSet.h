#pragma once
#include "afxwin.h"
#include "RTEXFormView.h"

const UINT IOBoardstatus[4][32]={
 {
	IDC_CHECK_BIT0, IDC_CHECK_BIT1, IDC_CHECK_BIT2, IDC_CHECK_BIT3, IDC_CHECK_BIT4, IDC_CHECK_BIT5, IDC_CHECK_BIT6, IDC_CHECK_BIT7,
	IDC_CHECK_BIT8, IDC_CHECK_BIT9, IDC_CHECK_BIT10, IDC_CHECK_BIT11, IDC_CHECK_BIT12, IDC_CHECK_BIT13, IDC_CHECK_BIT14, IDC_CHECK_BIT15,
	IDC_CHECK_BIT16, IDC_CHECK_BIT17, IDC_CHECK_BIT18, IDC_CHECK_BIT19, IDC_CHECK_BIT20, IDC_CHECK_BIT21, IDC_CHECK_BIT22, IDC_CHECK_BIT23,
	IDC_CHECK_BIT24, IDC_CHECK_BIT25, IDC_CHECK_BIT26, IDC_CHECK_BIT27, IDC_CHECK_BIT28, IDC_CHECK_BIT29, IDC_CHECK_BIT30, IDC_CHECK_BIT31
 },
 {
	 IDC_CHECK_BIT32, IDC_CHECK_BIT33, IDC_CHECK_BIT34, IDC_CHECK_BIT35, IDC_CHECK_BIT36, IDC_CHECK_BIT37, IDC_CHECK_BIT38, IDC_CHECK_BIT39,
	 IDC_CHECK_BIT40, IDC_CHECK_BIT41, IDC_CHECK_BIT42, IDC_CHECK_BIT43, IDC_CHECK_BIT44, IDC_CHECK_BIT45, IDC_CHECK_BIT46, IDC_CHECK_BIT47,
	 IDC_CHECK_BIT48, IDC_CHECK_BIT49, IDC_CHECK_BIT50, IDC_CHECK_BIT51, IDC_CHECK_BIT52, IDC_CHECK_BIT53, IDC_CHECK_BIT54, IDC_CHECK_BIT55,
	 IDC_CHECK_BIT56, IDC_CHECK_BIT57, IDC_CHECK_BIT58, IDC_CHECK_BIT59, IDC_CHECK_BIT60, IDC_CHECK_BIT61, IDC_CHECK_BIT62, IDC_CHECK_BIT63
 },
 {
	 IDC_CHECK_BIT64, IDC_CHECK_BIT65, IDC_CHECK_BIT66, IDC_CHECK_BIT67, IDC_CHECK_BIT68, IDC_CHECK_BIT69, IDC_CHECK_BIT70, IDC_CHECK_BIT71, 
	 IDC_CHECK_BIT72, IDC_CHECK_BIT73, IDC_CHECK_BIT74, IDC_CHECK_BIT75, IDC_CHECK_BIT76, IDC_CHECK_BIT77, IDC_CHECK_BIT78, IDC_CHECK_BIT79, 
	 IDC_CHECK_BIT80, IDC_CHECK_BIT81, IDC_CHECK_BIT82, IDC_CHECK_BIT83, IDC_CHECK_BIT84, IDC_CHECK_BIT85, IDC_CHECK_BIT86, IDC_CHECK_BIT87, 
	 IDC_CHECK_BIT88, IDC_CHECK_BIT89, IDC_CHECK_BIT90, IDC_CHECK_BIT91, IDC_CHECK_BIT92, IDC_CHECK_BIT93, IDC_CHECK_BIT94, IDC_CHECK_BIT95
 },
 {
	 IDC_CHECK_BIT96, IDC_CHECK_BIT97, IDC_CHECK_BIT98, IDC_CHECK_BIT99, IDC_CHECK_BIT100, IDC_CHECK_BIT101, IDC_CHECK_BIT102, IDC_CHECK_BIT103, 
	 IDC_CHECK_BIT104, IDC_CHECK_BIT105, IDC_CHECK_BIT106, IDC_CHECK_BIT107, IDC_CHECK_BIT108, IDC_CHECK_BIT109, IDC_CHECK_BIT110, IDC_CHECK_BIT111, 
	 IDC_CHECK_BIT112, IDC_CHECK_BIT113, IDC_CHECK_BIT114, IDC_CHECK_BIT115, IDC_CHECK_BIT116, IDC_CHECK_BIT117, IDC_CHECK_BIT118, IDC_CHECK_BIT119, 
	 IDC_CHECK_BIT120, IDC_CHECK_BIT121, IDC_CHECK_BIT122, IDC_CHECK_BIT123, IDC_CHECK_BIT124, IDC_CHECK_BIT125, IDC_CHECK_BIT126, IDC_CHECK_BIT127
 }
};
const UINT IOStatusText[4] = {IDC_STATIC_IO_0, IDC_STATIC_IO_1,IDC_STATIC_IO_2, IDC_STATIC_IO_3};
// CIOBoardSet 對話方塊

class CIOBoardSet : public CDialogEx
{
	DECLARE_DYNAMIC(CIOBoardSet)

public:
	CIOBoardSet(CWnd* pParent = NULL);   // 標準建構函式
	virtual ~CIOBoardSet();

// 對話方塊資料
	enum { IDD = IDD_IOBoardSet };

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支援

	DECLARE_MESSAGE_MAP()
public:
	CComboBox m_ctrl_IO_MacID[4];
	virtual BOOL OnInitDialog();
	CRTEXFormView* m_parent;
	BOOL m_fgenableIO_borad[4];
	BOOL m_fgInput[4];
	afx_msg void OnCbnSelchangeComboIoMacid();
	afx_msg void OnCbnSelchangeComboIoMacid1();
	afx_msg void OnCbnSelchangeComboIoMacid2();
	afx_msg void OnCbnSelchangeComboIoMacid3();

    static UINT InputBoardthreadFun(LPVOID LParam);
	void DoInuputEvent(void);
	BOOL m_input_threading;
	BOOL m_threadEnd;
	void SetInputButton(UINT number, UINT value);
	virtual void OnOK();
	afx_msg void OnClose();
	afx_msg void OnCHKClicked0_31(UINT uiCmdID);
	afx_msg void OnCHKClicked32_63(UINT uiCmdID);
	afx_msg void OnCHKClicked64_95(UINT uiCmdID);
	afx_msg void OnCHKClicked96_127(UINT uiCmdID);

	virtual void OnCancel();
	afx_msg void OnBnClickedExit();
	bool fgboard0btnChg[4];
	afx_msg void OnTimer(UINT_PTR nIDEvent);
	void SetOutBoardFunction(unsigned char ucBoardNum, unsigned char ucBitchg);
};
